name: Create issues from Dependabot vulnerabilities
on:
  schedule:
    - cron: '0 16 * * *'  # Run at approximately 16:00 UTC every day
  workflow_dispatch:

jobs:
  check_dependabot:
    runs-on: ubuntu-latest
    steps:    
      - name: Fetch Alerts and Create Issues
        env:
          # PAT needs
          # "Dependabot alerts" repository permissions (read)
          # https://docs.github.com/en/rest/dependabot/alerts?apiVersion=2022-11-28#list-dependabot-alerts-for-a-repository--fine-grained-access-tokens
          GH_TOKEN: ${{ secrets.YOUR_PAT }}
          REPO: ${{ github.repository }}
        run: |
          alerts=$(gh api -X GET -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/$REPO/dependabot/alerts -f state='open')
          echo "$alerts" | jq -c '.[]' | while read -r alert; do

            number=$(echo $alert | jq -r '.number')
            summary=$(echo $alert | jq -r '.security_advisory.summary') 
            description=$(echo $alert | jq -r '.security_advisory.description')
            severity=$(echo $alert | jq -r '.security_advisory.severity' | tr '[:lower:]' '[:upper:]')
            url=$(echo $alert | jq -r '.url')
            repo_name=$(echo $alert | jq -r '.repository.name')

            issue_title="[$severity][$repo_name] $summary | #$number"
            issue_body="# Dependabot Vulnerability Alert\n\n## Description\n$description\n\n$url"
            
            existing_issues=$(gh issue list --repo my/repo --search "$issue_title in:title")
            if [ -z "$existing_issues" ]; then
              echo -e "$issue_body" | gh issue create --repo my/repo --title "$issue_title" -l dependabot-vuln --body-file -
            else
                echo "Issues already exists for $issue_title"
            fi
          done
